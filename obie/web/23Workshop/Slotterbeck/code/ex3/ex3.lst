   1 main ex3
	include    	
   2 
   3 /* for nested in a loop */
   4 
   5 deflog  (TRUE, 1);
	shape_    	4096,1,1 1,0,0
	main    	EX3
	ident    	
	temp_fxsc    	STMP$, 48, 0, 0, 16, CS$
	entry_    	STMP$
	temp_flsc    	SFTMP$, 61, 0, 8, 24, CS$
	entry_    	SFTMP$
	decl_fxsc    	OUTBF$, 7200, 0, 0, 16, CS$
	entry_    	OUTBF$
	decl_fxpa    	STACK$, 32, 0, 0, 32, CS$
	entry_    	STACK$
	decl_fxsc    	host_stack$, 1, 0, 0, 16, CS$
	entry_    	host_stack$
	temp_fxpa    	IPTMP$, 16, 16, 0, 16, CS$
	temp_flpa    	RPTMP$, 15, 32, 8, 24, CS$
	temp_lgpa    	LPTMP$, 17, 1, 0, 1, CS$
	temp_lipa    	LITMP$, 5, 32, 0, 32, CS$
	decl_lgpa    	TRUE$, 1, 1, 0, 1, CS$
	decl_lgpa    	FALSE$, 1, 1, 0, 1, CS$
	decl_lgpa    	IOMASK, 1, 1, 0, 1, CS$
	decl_fxcn    	C10D$, 1, 10, 0, 16
	entry_    	C10D$
	decl_fxcn    	C8D$, 1, 8, 0, 16
	entry_    	C8D$
	decl_fxcn    	C2D$, 1, 2, 0, 16
	entry_    	C2D$
	decl_fxcn    	C1D$, 1, 1, 0, 16
	entry_    	C1D$
	decl_fxcn    	C0D$, 1, 0, 0, 16
	entry_    	C0D$
	decl_fxcn    	C16D$, 1, 16, 0, 16
	entry_    	C16D$
	decl_fxcn    	C48D$, 1, 48, 0, 16
	entry_    	C48D$
	decl_fxcn    	C45D$, 1, 45, 0, 16
	entry_    	C45D$
	decl_fxcn    	C32D$, 1, 32, 0, 16
	entry_    	C32D$
	decl_lgpa    	THEM, 1, 1, 0, 1, CS$
	decl_fxpa    	LEX$, 1, 96, 0, 96, CS$
	decl_fxpa    	LEX_VAL$, 1, 96, 0, 96, CS$
	decl_lgpa    	LEX_BI$, 1, 1, 0, 1, CS$
	decl_lgpa    	GLOBAL_BI$, 1, 1, 0, 1, CS$
	decl_lgpa    	THEIR, 1, 1, 0, 1, CS$
	decl_lgpa    	ITS, 1, 1, 0, 1, CS$
	decl_lgpa    	THE, 1, 1, 0, 1, CS$
	decl_lgpa    	AN, 1, 1, 0, 1, CS$
	decl_lgpa    	A, 1, 1, 0, 1, CS$
	decl_lgpa    	@, 1, 1, 0, 1, CS$
	decl_fxsc    	PERFORM, 1, 1, 0, 1, CS$
	decl_fxsc    	PA_PERFORM, 1, 1, 0, 1, CS$
	decl_fxsc    	SC_PERFORM, 1, 1, 0, 1, CS$
	decl_fxsc    	HANDLE$, 2, 0, 0, 16, CS$
	decl_lgcn    	TRUE, 1, 1, 0, 1
   6 deflog  (FALSE, 0);
	decl_lgcn    	FALSE, 1, 0, 0, 1
   7 
   8 int parallel firsti[$], second[$], third[$];
	decl_fxpa    	FIRSTI, 1, 16, 0, 16, CS$
	decl_fxpa    	SECOND, 1, 16, 0, 16, CS$
	decl_fxpa    	THIRD, 1, 16, 0, 16, CS$
   9 int scalar node,i,j;
	decl_fxsc    	NODE, 1, 0, 0, 16, CS$
	entry_    	NODE
	decl_fxsc    	I, 1, 0, 0, 16, CS$
	entry_    	I
	decl_fxsc    	J, 1, 0, 0, 16, CS$
	entry_    	J
  10 index parallel xx[$];
	decl_lgpa    	XX, 1, 1, 0, 1, CS$
  11 logical parallel test[$],result[$];
	decl_lgpa    	TEST, 1, 1, 0, 1, CS$
	decl_lgpa    	RESULT, 1, 1, 0, 1, CS$
  12 
  13 
  14 associate second[$],firsti[$],third[$] with test[$];
  15 
  16 read firsti[$] second[$] third[$] in test[$];
	clr_array    	
	alloc_    	THE
	init_stack    	
	beg_of_stmt     	16, 0
  17 print firsti[$] second[$] third[$] in test[$];
	beg_read    	SYSOT, TEST, FIRSTI,SECOND,THIRD,
	mvsc_fxsc    	C0D$, STMP$+0
	mvsc_fxsc    	C0D$, STMP$+1
	loop_    	PT$S1
	read_ln    	SYSIN, STMP$+1, PT$R1
	until_sc    	STMP$+1, PT$E1
	read_fxpa    	OUTBF$,C0D$, STMP$+0, 16, PT$R1
	decl_fxcn    	C2400D$, 1, 2400, 0, 16
	entry_    	C2400D$
	read_fxpa    	OUTBF$,C2400D$, STMP$+0, 16, PT$R1
	decl_fxcn    	C4800D$, 1, 4800, 0, 16
	entry_    	C4800D$
	read_fxpa    	OUTBF$,C4800D$, STMP$+0, 16, PT$R1
	addfxsc    	STMP$+0, C1D$, STMP$+0
	endloop    	PT$E1, PT$S1
	gtfxsc    	STMP$+0, C2400D$, STMP$+1
	if_sc    	STMP$+1, PT$N1
	msg    	SYSOT, ERROR - I/O BUFFER OVERFLOW ON READ - SOME DATA OVERWRITTEN.
	else_sc    	PT$F1, PT$N1
	endif_sc    	PT$F1
	ioalloc2    	TEST, STMP$+0
	expandfxpa    	OUTBF$,C0D$, FIRSTI, C16D$
	input_fxpa    	FIRSTI, C16D$
	expandfxpa    	OUTBF$,C2400D$, SECOND, C16D$
	input_fxpa    	SECOND, C16D$
	expandfxpa    	OUTBF$,C4800D$, THIRD, C16D$
	input_fxpa    	THIRD, C16D$
	endread_    	
	beg_of_stmt     	17, 0
  18 
  19 /*
  20 1 1 2
  21 2 3 2
  22 1 2 3
  23 2 1 3
  24 1 3 1
  25 2 2 1
  26  */
  27 first
	fstout_    	TEST
	outpt_fxpa    	FIRSTI, C16D$
	colapsefxpa    	OUTBF$,C0D$, STMP$+0, FIRSTI, C16D$
	outpt_fxpa    	SECOND, C16D$
	colapsefxpa    	OUTBF$,C2400D$, STMP$+0, SECOND, C16D$
	outpt_fxpa    	THIRD, C16D$
	colapsefxpa    	OUTBF$,C4800D$, STMP$+0, THIRD, C16D$
	beg_print    	SYSOT, TEST, FIRSTI,SECOND,THIRD,
	gtfxsc    	STMP$+0, C2400D$, STMP$+1
	if_sc    	STMP$+1, PT$N2
	msg    	SYSOT, ERROR - I/O BUFFER OVERFLOW ON PRINT - SOME DATA LOST.
	else_sc    	PT$F2, PT$N2
	endif_sc    	PT$F2
	mvsc_fxsc    	C0D$, STMP$+1
	loop_    	PT$S2
	gefxsc    	STMP$+1, STMP$+0, STMP$+2
	until_sc    	STMP$+2, PT$E2
	sprint_fxpa    	SYSOT, OUTBF$,C0D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_fxpa    	SYSOT, OUTBF$,C2400D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_fxpa    	SYSOT, OUTBF$,C4800D$, STMP$+1, CS$
	print_del    	SYSOT
	print_nl    	SYSOT
	addfxsc    	STMP$+1, C1D$, STMP$+1
	endloop    	PT$E2, PT$S2
	endprint    	
	beg_of_stmt     	27, 0
  28 j=1;
	beg_of_stmt     	28, 0
	mvsc_fxsc    	C1D$, J
  29 loop
	beg_of_stmt     	29, 0
  30 until j .gt. 2
	loop       	LO$S3
	beg_of_stmt     	30, 0
  31 for xx in firsti[$] .eq. j
	gt_fxsc    	J, C2D$, STMP$+0
	until_sc    	STMP$+0, LO$E3
	beg_of_stmt     	31, 0
	setscope    	FO$S1
  32   if second[xx] .eq. third[$] then result[$] = TRUE;
	eq_fxcr    	FIRSTI, J, LPTMP$+0
	mvpa_lgpa    	LPTMP$+0, THEM
	for      	LPTMP$+0, XX, FO$E1, FO$R1
	mvpa_lgpa    	XX, ITS
	beg_of_stmt     	32, 0
	begif    	IF$S1
	mvpa_fx    	SECOND, STMP$+0, XX, C16D$
	mvsc_lgmm    	THE, STMP$+0, SECOND
	eq_fx    	STMP$+0, THIRD, LPTMP$+0
	mvpa_lgpa    	LPTMP$+0, THEM
	if_pa    	LPTMP$+0, ELS$1
	beg_of_stmt     	32, 0
	mvsc_lgpa    	TRUE, RESULT, C1D$
  33 	else result[$] = FALSE; endif;
	beg_of_stmt     	33, 0
	label    	ELS$1
	else_pa    	IF$E1
	beg_of_stmt     	33, 0
	mvsc_lgpa    	FALSE, RESULT, C1D$
	beg_of_stmt     	33, 0
	endif_pa    	IF$E1
  34   print firsti[$] second[$] third[$] in result[$];
	beg_of_stmt     	34, 0
  35 endfor xx;
	fstout_    	RESULT
	outpt_fxpa    	FIRSTI, C16D$
	colapsefxpa    	OUTBF$,C0D$, STMP$+0, FIRSTI, C16D$
	outpt_fxpa    	SECOND, C16D$
	colapsefxpa    	OUTBF$,C2400D$, STMP$+0, SECOND, C16D$
	outpt_fxpa    	THIRD, C16D$
	colapsefxpa    	OUTBF$,C4800D$, STMP$+0, THIRD, C16D$
	beg_print    	SYSOT, RESULT, FIRSTI,SECOND,THIRD,
	gtfxsc    	STMP$+0, C2400D$, STMP$+1
	if_sc    	STMP$+1, PT$N4
	msg    	SYSOT, ERROR - I/O BUFFER OVERFLOW ON PRINT - SOME DATA LOST.
	else_sc    	PT$F4, PT$N4
	endif_sc    	PT$F4
	mvsc_fxsc    	C0D$, STMP$+1
	loop_    	PT$S4
	gefxsc    	STMP$+1, STMP$+0, STMP$+2
	until_sc    	STMP$+2, PT$E4
	sprint_fxpa    	SYSOT, OUTBF$,C0D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_fxpa    	SYSOT, OUTBF$,C2400D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_fxpa    	SYSOT, OUTBF$,C4800D$, STMP$+1, CS$
	print_del    	SYSOT
	print_nl    	SYSOT
	addfxsc    	STMP$+1, C1D$, STMP$+1
	endloop    	PT$E4, PT$S4
	endprint    	
	beg_of_stmt     	35, 0
	endfor    	XX, FO$E1, FO$R1
  36 j = j + 1;
	beg_of_stmt     	36, 0
	add_1fxsc    	J, C1D$, STMP$+0
	mvsc_fxsc    	STMP$+0, J
  37 endloop;
	beg_of_stmt     	37, 0
	endloop    	LO$E3, LO$S3
  38 
  39 /*
  40   1  3  1
  41   2  2  1
  42 
  43   1  1  2
  44   2  3  2
  45 
  46   1  2  3
  47   2  1  3
  48 
  49   1  2  3
  50   2  1  3
  51 
  52   1  3  1
  53   2  2  1
  54 
  55   1  1  2
  56   2  3  2
  57 
  58  */
  59 
  60 
  61 
  62 end;
	beg_of_stmt     	62, 0
	label_    	$EXIT$
	stop_    	
	endmain    	EX3
  63 
  64 
  65 ÿ
