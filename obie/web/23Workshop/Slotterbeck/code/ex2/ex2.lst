   1 main ex2
	include    	
   2 
   3 int parallel aa[$], bb[$], cc[$];
	shape_    	4096,1,1 1,0,0
	main    	EX2
	ident    	
	temp_fxsc    	STMP$, 48, 0, 0, 16, CS$
	entry_    	STMP$
	temp_flsc    	SFTMP$, 61, 0, 8, 24, CS$
	entry_    	SFTMP$
	decl_fxsc    	OUTBF$, 7200, 0, 0, 16, CS$
	entry_    	OUTBF$
	decl_fxpa    	STACK$, 32, 0, 0, 32, CS$
	entry_    	STACK$
	decl_fxsc    	host_stack$, 1, 0, 0, 16, CS$
	entry_    	host_stack$
	temp_fxpa    	IPTMP$, 16, 16, 0, 16, CS$
	temp_flpa    	RPTMP$, 15, 32, 8, 24, CS$
	temp_lgpa    	LPTMP$, 17, 1, 0, 1, CS$
	temp_lipa    	LITMP$, 5, 32, 0, 32, CS$
	decl_lgpa    	TRUE$, 1, 1, 0, 1, CS$
	decl_lgpa    	FALSE$, 1, 1, 0, 1, CS$
	decl_lgpa    	IOMASK, 1, 1, 0, 1, CS$
	decl_fxcn    	C10D$, 1, 10, 0, 16
	entry_    	C10D$
	decl_fxcn    	C8D$, 1, 8, 0, 16
	entry_    	C8D$
	decl_fxcn    	C2D$, 1, 2, 0, 16
	entry_    	C2D$
	decl_fxcn    	C1D$, 1, 1, 0, 16
	entry_    	C1D$
	decl_fxcn    	C0D$, 1, 0, 0, 16
	entry_    	C0D$
	decl_fxcn    	C16D$, 1, 16, 0, 16
	entry_    	C16D$
	decl_fxcn    	C48D$, 1, 48, 0, 16
	entry_    	C48D$
	decl_fxcn    	C45D$, 1, 45, 0, 16
	entry_    	C45D$
	decl_fxcn    	C32D$, 1, 32, 0, 16
	entry_    	C32D$
	decl_lgpa    	THEM, 1, 1, 0, 1, CS$
	decl_fxpa    	LEX$, 1, 96, 0, 96, CS$
	decl_fxpa    	LEX_VAL$, 1, 96, 0, 96, CS$
	decl_lgpa    	LEX_BI$, 1, 1, 0, 1, CS$
	decl_lgpa    	GLOBAL_BI$, 1, 1, 0, 1, CS$
	decl_lgpa    	THEIR, 1, 1, 0, 1, CS$
	decl_lgpa    	ITS, 1, 1, 0, 1, CS$
	decl_lgpa    	THE, 1, 1, 0, 1, CS$
	decl_lgpa    	AN, 1, 1, 0, 1, CS$
	decl_lgpa    	A, 1, 1, 0, 1, CS$
	decl_lgpa    	@, 1, 1, 0, 1, CS$
	decl_fxsc    	PERFORM, 1, 1, 0, 1, CS$
	decl_fxsc    	PA_PERFORM, 1, 1, 0, 1, CS$
	decl_fxsc    	SC_PERFORM, 1, 1, 0, 1, CS$
	decl_fxsc    	HANDLE$, 2, 0, 0, 16, CS$
	decl_fxpa    	AA, 1, 16, 0, 16, CS$
	decl_fxpa    	BB, 1, 16, 0, 16, CS$
	decl_fxpa    	CC, 1, 16, 0, 16, CS$
   4 index parallel xx[$], bi[$], bbi[$];
	decl_lgpa    	XX, 1, 1, 0, 1, CS$
	decl_lgpa    	BI, 1, 1, 0, 1, CS$
	decl_lgpa    	BBI, 1, 1, 0, 1, CS$
   5 real parallel dd[$];
	decl_flpa    	DD, 1, 32, 8, 24, CS$
   6 int scalar summ;
	decl_fxsc    	SUMM, 1, 0, 0, 16, CS$
	entry_    	SUMM
   7 logical parallel yy[$];
	decl_lgpa    	YY, 1, 1, 0, 1, CS$
   8 
   9 read aa[$], bb[$] bi[$] in bbi[$];
	clr_array    	
	alloc_    	THE
	init_stack    	
	beg_of_stmt     	9, 0
  10 
  11 msg "Input data: ";
	beg_read    	SYSOT, BBI, AA,BB,BI,
	mvsc_fxsc    	C0D$, STMP$+0
	mvsc_fxsc    	C0D$, STMP$+1
	loop_    	PT$S1
	read_ln    	SYSIN, STMP$+1, PT$R1
	until_sc    	STMP$+1, PT$E1
	read_fxpa    	OUTBF$,C0D$, STMP$+0, 16, PT$R1
	decl_fxcn    	C2400D$, 1, 2400, 0, 16
	entry_    	C2400D$
	read_fxpa    	OUTBF$,C2400D$, STMP$+0, 16, PT$R1
	decl_fxcn    	C4800D$, 1, 4800, 0, 16
	entry_    	C4800D$
	read_lgpa    	OUTBF$,C4800D$, STMP$+0, 1, PT$R1
	addfxsc    	STMP$+0, C1D$, STMP$+0
	endloop    	PT$E1, PT$S1
	gtfxsc    	STMP$+0, C2400D$, STMP$+1
	if_sc    	STMP$+1, PT$N1
	msg    	SYSOT, ERROR - I/O BUFFER OVERFLOW ON READ - SOME DATA OVERWRITTEN.
	else_sc    	PT$F1, PT$N1
	endif_sc    	PT$F1
	ioalloc2    	BBI, STMP$+0
	expandfxpa    	OUTBF$,C0D$, AA, C16D$
	input_fxpa    	AA, C16D$
	expandfxpa    	OUTBF$,C2400D$, BB, C16D$
	input_fxpa    	BB, C16D$
	expandlgpa    	OUTBF$,C4800D$, BI, C1D$
	input_lgpa    	BI, C1D$
	endread_    	
	beg_of_stmt     	11, 0
	msg_     	SYSOT, Input data: 
  12 print aa[$], bb[$] bbi[$] in bbi[$];
	print_nl    	SYSOT
	beg_of_stmt     	12, 0
  13 
  14 yy[$] = bb[$] .eq. 13;
	fstout_    	BBI
	outpt_fxpa    	AA, C16D$
	colapsefxpa    	OUTBF$,C0D$, STMP$+0, AA, C16D$
	outpt_fxpa    	BB, C16D$
	colapsefxpa    	OUTBF$,C2400D$, STMP$+0, BB, C16D$
	outpt_lgpa    	BBI, C1D$
	colapselgpa    	OUTBF$,C4800D$, STMP$+0, BBI, C1D$
	beg_print    	SYSOT, BBI, AA,BB,BBI,
	gtfxsc    	STMP$+0, C2400D$, STMP$+1
	if_sc    	STMP$+1, PT$N2
	msg    	SYSOT, ERROR - I/O BUFFER OVERFLOW ON PRINT - SOME DATA LOST.
	else_sc    	PT$F2, PT$N2
	endif_sc    	PT$F2
	mvsc_fxsc    	C0D$, STMP$+1
	loop_    	PT$S2
	gefxsc    	STMP$+1, STMP$+0, STMP$+2
	until_sc    	STMP$+2, PT$E2
	sprint_fxpa    	SYSOT, OUTBF$,C0D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_fxpa    	SYSOT, OUTBF$,C2400D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_lgpa    	SYSOT, OUTBF$,C4800D$, STMP$+1, CS$
	print_del    	SYSOT
	print_nl    	SYSOT
	addfxsc    	STMP$+1, C1D$, STMP$+1
	endloop    	PT$E2, PT$S2
	endprint    	
	beg_of_stmt     	14, 0
	decl_fxcn    	C13D$, 1, 13, 0, 16
	entry_    	C13D$
	eq_fxcr    	BB, C13D$, LPTMP$+0
	mvpa_lgpa    	LPTMP$+0, THEM
	mvpa_lgpa    	LPTMP$+0, YY
  15 release yy[$] from bbi[$];
	beg_of_stmt     	15, 0
  16 allocate xx in bbi[$]
	release_pa    	YY, BBI
	beg_of_stmt     	16, 0
  17  aa[xx] = 5;
	alloc_    	XX, BBI, C1D$
	mvpa_lgpa    	XX, ITS
	beg_of_stmt     	17, 0
	decl_fxcn    	C5D$, 1, 5, 0, 16
	entry_    	C5D$
	resf_pa    	XX, LPTMP$+0
	mvsc_fxmm    	LPTMP$+0, C5D$, AA
  18  bb[$] = 6;
	beg_of_stmt     	18, 0
	decl_fxcn    	C6D$, 1, 6, 0, 16
	entry_    	C6D$
	mvsc_fxpa    	C6D$, BB, C16D$
  19 endallocate xx;
	beg_of_stmt     	19, 0
	endalloc_    	AL$E1
  20 print aa[$], bb[$] bbi[$] xx[$] yy[$] in bbi[$];
	beg_of_stmt     	20, 0
  21 
  22 msg "bi[$]=" bi[$];
	fstout_    	BBI
	outpt_fxpa    	AA, C16D$
	colapsefxpa    	OUTBF$,C0D$, STMP$+0, AA, C16D$
	outpt_fxpa    	BB, C16D$
	decl_fxcn    	C1440D$, 1, 1440, 0, 16
	entry_    	C1440D$
	colapsefxpa    	OUTBF$,C1440D$, STMP$+0, BB, C16D$
	outpt_lgpa    	BBI, C1D$
	decl_fxcn    	C2880D$, 1, 2880, 0, 16
	entry_    	C2880D$
	colapselgpa    	OUTBF$,C2880D$, STMP$+0, BBI, C1D$
	outpt_lgpa    	XX, C1D$
	decl_fxcn    	C4320D$, 1, 4320, 0, 16
	entry_    	C4320D$
	colapselgpa    	OUTBF$,C4320D$, STMP$+0, XX, C1D$
	outpt_lgpa    	YY, C1D$
	decl_fxcn    	C5760D$, 1, 5760, 0, 16
	entry_    	C5760D$
	colapselgpa    	OUTBF$,C5760D$, STMP$+0, YY, C1D$
	beg_print    	SYSOT, BBI, AA,BB,BBI,XX,YY,
	gtfxsc    	STMP$+0, C1440D$, STMP$+1
	if_sc    	STMP$+1, PT$N3
	msg    	SYSOT, ERROR - I/O BUFFER OVERFLOW ON PRINT - SOME DATA LOST.
	else_sc    	PT$F3, PT$N3
	endif_sc    	PT$F3
	mvsc_fxsc    	C0D$, STMP$+1
	loop_    	PT$S3
	gefxsc    	STMP$+1, STMP$+0, STMP$+2
	until_sc    	STMP$+2, PT$E3
	sprint_fxpa    	SYSOT, OUTBF$,C0D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_fxpa    	SYSOT, OUTBF$,C1440D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_lgpa    	SYSOT, OUTBF$,C2880D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_lgpa    	SYSOT, OUTBF$,C4320D$, STMP$+1, CS$
	print_del    	SYSOT
	sprint_lgpa    	SYSOT, OUTBF$,C5760D$, STMP$+1, CS$
	print_del    	SYSOT
	print_nl    	SYSOT
	addfxsc    	STMP$+1, C1D$, STMP$+1
	endloop    	PT$E3, PT$S3
	endprint    	
	beg_of_stmt     	22, 0
	msg_     	SYSOT, bi[$]=
	print_nl    	SYSOT
	dump_lgpa    	SYSOT, BI, CS$
	print_nl    	SYSOT
  23 msg "bbi[$]=" bbi[$];
	print_nl    	SYSOT
	beg_of_stmt     	23, 0
	msg_     	SYSOT, bbi[$]=
	print_nl    	SYSOT
	dump_lgpa    	SYSOT, BBI, CS$
	print_nl    	SYSOT
  24 msg "xx[$]=" xx[$];
	print_nl    	SYSOT
	beg_of_stmt     	24, 0
	msg_     	SYSOT, xx[$]=
	print_nl    	SYSOT
	dump_lgpa    	SYSOT, XX, CS$
	print_nl    	SYSOT
  25 
  26 end;
	print_nl    	SYSOT
	beg_of_stmt     	26, 0
	label_    	$EXIT$
	stop_    	
	endmain    	EX2
  27 
  28 
  29 ÿ
